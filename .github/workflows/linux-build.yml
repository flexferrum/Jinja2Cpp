name: CI-linux-build

on: push

jobs:
  linux-gcc-build:

    runs-on: ubuntu-latest
    
    strategy:
      matrix:
        compiler: [gcc-5] #, gcc-6, gcc-7, gcc-8, gcc-9]
        base-flags: [''] # , -DJINJA2CPP_CXX_STANDARD=17]
        build-config: [Release] #, Debug]

        include:
          - compiler: gcc-8
            extra-flags: -DJINJA2CPP_STRICT_WARNINGS=OFF
          - compiler: gcc-9
            extra-flags: -DJINJA2CPP_STRICT_WARNINGS=OFF
        
        exclude:
          - compiler: gcc-5
            base-flags: -DJINJA2CPP_CXX_STANDARD=17
          - compiler: gcc-6
            base-flags: -DJINJA2CPP_CXX_STANDARD=17
    
    steps:
    - uses: actions/checkout@v1
      with:
        compiler: ${{ matrix.compiler }}
        base_flags: ${{ matrix.base-flags }}
        build_config: ${{ matrix.build-config }}
        extra_flags: ${{ matrix.extra-flags }}
    - name: Test environment
      run: |
        echo "#1 ${INPUT_COMPILER}"
        echo "#2 $(INPUT_COMPILER)"
        echo "#3 $INPUT_COMPILER"
    - name: Setup environment
      run: |
        sudo apt-get install -y cmake build-essential ${INPUT_COMPILER}
    - name: Prepare build
      run: |
        export BUILD_TARGET=all
        export CMAKE_OPTS=-DCMAKE_VERBOSE_MAKEFILE=OFF
        if [[ "${INPUT_COMPILER}" != \"\" ]]; then export CXX=${INPUT_COMPILER}; fi
        export BUILD_CONFIG=${INPUT_BUILD_CONFIG}
        $CXX --version
        export EXTRA_FLAGS=${INPUT_BASE_FLAGS} ${INPUT_EXTRA_FLAGS}

    - name: Build
      run: |
        mkdir -p build && cd build
        cmake $CMAKE_OPTS -DCMAKE_BUILD_TYPE=$BUILD_CONFIG -DCMAKE_CXX_FLAGS=$CMAKE_CXX_FLAGS -DJINJA2CPP_DEPS_MODE=internal $EXTRA_FLAGS .. && cmake --build . --config $BUILD_CONFIG --target all -- -j4
