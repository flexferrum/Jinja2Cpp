name: CI-windows-build

on: push

jobs:
  windows-msvc-build:

    runs-on: ${{matrix.run-machine}}
    
    strategy:
      fail-fast: false
      max-parallel: 10
      matrix:
        compiler: [msvc-2017, msvc-2019]
        base-flags: [""] #, -DJINJA2CPP_CXX_STANDARD=17]
        build-config: [Release] #, Debug]
        build-platform: [x86] #, x64]
        build-runtime: [""] #, /MT, /MD]

        include:
          - compiler: msvc-2017
            build-platform: x86
            run-machine: windows-2016
            generator: Visual Studio 15 2017
            vc_vars:  C:\Program Files (x86)\Microsoft Visual Studio\2017\Enterprise\VC\Auxiliary\Build\vcvars32.bat
          - compiler: msvc-2017
            build-platform: x64
            run-machine: windows-2016
            generator: Visual Studio 15 2017 Win64
            vc_vars:  C:\Program Files (x86)\Microsoft Visual Studio\2017\Enterprise\VC\Auxiliary\Build\vcvars64.bat
          - compiler: msvc-2019
            build-platform: x86
            run-machine: windows-2019
            generator: Visual Studio 16 2019
            vc_vars:  C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Auxiliary\Build\vcvars32.bat
          - compiler: msvc-2019
            build-platform: x64
            run-machine: windows-2019
            generator: Visual Studio 16 2019 Win64
            vc_vars:  C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Auxiliary\Build\vcvars64.bat
        
    
    steps:
    - uses: actions/checkout@v1
#    - name: TestEnv
#      run: |
#        echo "#### 1 %BOOST_ROOT_1_69_0%" 
#        echo "#### 2 %BOOST_ROOT%" 
#        dir "%BOOST_ROOT_1_69_0%\lib\*.dll"
#        echo "#### 3" 
#        dir "%BOOST_ROOT_1_69_0%\libs\*.dll"
#        echo "#### 4" 
#        type %BOOST_ROOT_1_69_0%

    - name: Build
      env:
        INPUT_COMPILER: ${{ matrix.compiler }}
        INPUT_BASE_FLAGS: ${{ matrix.base-flags }}
        INPUT_BUILD_CONFIG: ${{ matrix.build-config }}
        INPUT_EXTRA_FLAGS: ${{ matrix.extra-flags }}
        INPUT_BUILD_PLATFORM: ${{ matrix.build-platform }}
        INPUT_BUILD_RUNTIME: ${{ matrix.build-runtime }}
        INPUT_GENERATOR: ${{ matrix.generator }}
        VC_VARS: "${{ matrix.vc_vars }}"
      run: |
        call "%VC_VARS%"       
        mkdir -p .build && cd .build
        cmake .. -G "%INPUT_GENERATOR%" -DCMAKE_BUILD_TYPE=%INPUT_BUILD_CONFIG% -DJINJA2CPP_MSVC_RUNTIME_TYPE="%INPUT_BUILD_RUNTIME%" -DJINJA2CPP_DEPS_MODE=external-boost %INPUT_BASE_FLAGS% %INPUT_EXTRA_FLAGS%
        dir
        cd
        cmake --build . --config %INPUT_BUILD_CONFIG%

    - name: Test
      env:
        INPUT_BUILD_CONFIG: ${{ matrix.build-config }}
        VC_VARS: "${{ matrix.vc_vars }}"
      run: |
        cd .build
        call "%VC_VARS%"
        set path=%BOOST_ROOT%\lib;%PATH%
        ctest -C %INPUT_BUILD_CONFIG% -V
